
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  text/html;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;
    lua_shared_dict ntlm_cache 10m;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  35;

    gzip  on;
    gzip_types text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_proxied any;
    gzip_vary on;
    gzip_comp_level 9;

    upstream nodejs {
        server localhost:8080;
    }

    server {
        listen       80;
        server_name  localhost;
        charset utf-8;
        root /var/www;
        #access_log  logs/host.access.log  main;

        location ~* \.(js|css|png|jpg|jpeg)$ {
            expires 1y;
            try_files $uri =404;
        }

        location = /api/user {
            access_by_lua_block {
                local cache = ngx.shared.ntlm_cache
                require('ntlm').negotiate('ldap://domain.net:389', cache, 15)
            }
            proxy_set_header   Host             $host;
            proxy_set_header   X-Real-IP        $remote_addr;
            proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
            proxy_pass http://nodejs;
        }
        
        #location /api {
        #    proxy_pass http://nodejs;
        #    proxy_set_header   Host             $host;
        #    proxy_set_header   X-Real-IP        $remote_addr;
        #    proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
        #}

        location / {
            access_by_lua_block {
                if ngx.var.uri == '/' then
                    local cache = ngx.shared.ntlm_cache
                    require('ntlm').negotiate('ldap://domain.net:389', cache, 15)
                end
            }
            expires -1;
            try_files $uri /index.html;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

    }

}
